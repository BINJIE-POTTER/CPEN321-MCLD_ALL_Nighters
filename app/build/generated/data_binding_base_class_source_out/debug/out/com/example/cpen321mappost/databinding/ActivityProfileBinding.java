// Generated by view binder compiler. Do not edit!
package com.example.cpen321mappost.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cpen321mappost.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout achievementBoard;

  @NonNull
  public final ImageView avatarProfile;

  @NonNull
  public final CardView avatarProfileCardView;

  @NonNull
  public final ImageView explorer;

  @NonNull
  public final View lastDivider;

  @NonNull
  public final ImageView master;

  @NonNull
  public final ImageView novice;

  @NonNull
  public final Button userBirthdateEditButtonId;

  @NonNull
  public final TextView userBirthdateId;

  @NonNull
  public final TextView userBirthdateValueId;

  @NonNull
  public final Button userEmailEditButtonId;

  @NonNull
  public final TextView userEmailId;

  @NonNull
  public final TextView userEmailValueId;

  @NonNull
  public final Button userFollowerCountId;

  @NonNull
  public final TextView userFollowerCountTextId;

  @NonNull
  public final Button userFollowingCountId;

  @NonNull
  public final TextView userFollowingCountTextId;

  @NonNull
  public final Button userGenderEditButtonId;

  @NonNull
  public final TextView userGenderId;

  @NonNull
  public final TextView userGenderValueId;

  @NonNull
  public final TextView userIdId;

  @NonNull
  public final TextView userIdValueId;

  @NonNull
  public final Button userLogInButtonId;

  @NonNull
  public final Button userLogOutButtonId;

  @NonNull
  public final Button userNameEditButtonId;

  @NonNull
  public final TextView userNameId;

  @NonNull
  public final TextView userNameValueId;

  @NonNull
  public final Button userPostCountId;

  @NonNull
  public final TextView userPostCountTextId;

  @NonNull
  public final Button userViewPostsButtonId;

  private ActivityProfileBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout achievementBoard, @NonNull ImageView avatarProfile,
      @NonNull CardView avatarProfileCardView, @NonNull ImageView explorer,
      @NonNull View lastDivider, @NonNull ImageView master, @NonNull ImageView novice,
      @NonNull Button userBirthdateEditButtonId, @NonNull TextView userBirthdateId,
      @NonNull TextView userBirthdateValueId, @NonNull Button userEmailEditButtonId,
      @NonNull TextView userEmailId, @NonNull TextView userEmailValueId,
      @NonNull Button userFollowerCountId, @NonNull TextView userFollowerCountTextId,
      @NonNull Button userFollowingCountId, @NonNull TextView userFollowingCountTextId,
      @NonNull Button userGenderEditButtonId, @NonNull TextView userGenderId,
      @NonNull TextView userGenderValueId, @NonNull TextView userIdId,
      @NonNull TextView userIdValueId, @NonNull Button userLogInButtonId,
      @NonNull Button userLogOutButtonId, @NonNull Button userNameEditButtonId,
      @NonNull TextView userNameId, @NonNull TextView userNameValueId,
      @NonNull Button userPostCountId, @NonNull TextView userPostCountTextId,
      @NonNull Button userViewPostsButtonId) {
    this.rootView = rootView;
    this.achievementBoard = achievementBoard;
    this.avatarProfile = avatarProfile;
    this.avatarProfileCardView = avatarProfileCardView;
    this.explorer = explorer;
    this.lastDivider = lastDivider;
    this.master = master;
    this.novice = novice;
    this.userBirthdateEditButtonId = userBirthdateEditButtonId;
    this.userBirthdateId = userBirthdateId;
    this.userBirthdateValueId = userBirthdateValueId;
    this.userEmailEditButtonId = userEmailEditButtonId;
    this.userEmailId = userEmailId;
    this.userEmailValueId = userEmailValueId;
    this.userFollowerCountId = userFollowerCountId;
    this.userFollowerCountTextId = userFollowerCountTextId;
    this.userFollowingCountId = userFollowingCountId;
    this.userFollowingCountTextId = userFollowingCountTextId;
    this.userGenderEditButtonId = userGenderEditButtonId;
    this.userGenderId = userGenderId;
    this.userGenderValueId = userGenderValueId;
    this.userIdId = userIdId;
    this.userIdValueId = userIdValueId;
    this.userLogInButtonId = userLogInButtonId;
    this.userLogOutButtonId = userLogOutButtonId;
    this.userNameEditButtonId = userNameEditButtonId;
    this.userNameId = userNameId;
    this.userNameValueId = userNameValueId;
    this.userPostCountId = userPostCountId;
    this.userPostCountTextId = userPostCountTextId;
    this.userViewPostsButtonId = userViewPostsButtonId;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.achievement_board;
      LinearLayout achievementBoard = ViewBindings.findChildViewById(rootView, id);
      if (achievementBoard == null) {
        break missingId;
      }

      id = R.id.avatar_profile;
      ImageView avatarProfile = ViewBindings.findChildViewById(rootView, id);
      if (avatarProfile == null) {
        break missingId;
      }

      id = R.id.avatar_profile_cardView;
      CardView avatarProfileCardView = ViewBindings.findChildViewById(rootView, id);
      if (avatarProfileCardView == null) {
        break missingId;
      }

      id = R.id.explorer;
      ImageView explorer = ViewBindings.findChildViewById(rootView, id);
      if (explorer == null) {
        break missingId;
      }

      id = R.id.last_divider;
      View lastDivider = ViewBindings.findChildViewById(rootView, id);
      if (lastDivider == null) {
        break missingId;
      }

      id = R.id.master;
      ImageView master = ViewBindings.findChildViewById(rootView, id);
      if (master == null) {
        break missingId;
      }

      id = R.id.novice;
      ImageView novice = ViewBindings.findChildViewById(rootView, id);
      if (novice == null) {
        break missingId;
      }

      id = R.id.user_birthdate_edit_button_id;
      Button userBirthdateEditButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userBirthdateEditButtonId == null) {
        break missingId;
      }

      id = R.id.user_birthdate_id;
      TextView userBirthdateId = ViewBindings.findChildViewById(rootView, id);
      if (userBirthdateId == null) {
        break missingId;
      }

      id = R.id.user_birthdate_value_id;
      TextView userBirthdateValueId = ViewBindings.findChildViewById(rootView, id);
      if (userBirthdateValueId == null) {
        break missingId;
      }

      id = R.id.user_email_edit_button_id;
      Button userEmailEditButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userEmailEditButtonId == null) {
        break missingId;
      }

      id = R.id.user_email_id;
      TextView userEmailId = ViewBindings.findChildViewById(rootView, id);
      if (userEmailId == null) {
        break missingId;
      }

      id = R.id.user_email_value_id;
      TextView userEmailValueId = ViewBindings.findChildViewById(rootView, id);
      if (userEmailValueId == null) {
        break missingId;
      }

      id = R.id.user_follower_count_id;
      Button userFollowerCountId = ViewBindings.findChildViewById(rootView, id);
      if (userFollowerCountId == null) {
        break missingId;
      }

      id = R.id.user_follower_count_text_id;
      TextView userFollowerCountTextId = ViewBindings.findChildViewById(rootView, id);
      if (userFollowerCountTextId == null) {
        break missingId;
      }

      id = R.id.user_following_count_id;
      Button userFollowingCountId = ViewBindings.findChildViewById(rootView, id);
      if (userFollowingCountId == null) {
        break missingId;
      }

      id = R.id.user_following_count_text_id;
      TextView userFollowingCountTextId = ViewBindings.findChildViewById(rootView, id);
      if (userFollowingCountTextId == null) {
        break missingId;
      }

      id = R.id.user_gender_edit_button_id;
      Button userGenderEditButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userGenderEditButtonId == null) {
        break missingId;
      }

      id = R.id.user_gender_id;
      TextView userGenderId = ViewBindings.findChildViewById(rootView, id);
      if (userGenderId == null) {
        break missingId;
      }

      id = R.id.user_gender_value_id;
      TextView userGenderValueId = ViewBindings.findChildViewById(rootView, id);
      if (userGenderValueId == null) {
        break missingId;
      }

      id = R.id.user_id_id;
      TextView userIdId = ViewBindings.findChildViewById(rootView, id);
      if (userIdId == null) {
        break missingId;
      }

      id = R.id.user_id_value_id;
      TextView userIdValueId = ViewBindings.findChildViewById(rootView, id);
      if (userIdValueId == null) {
        break missingId;
      }

      id = R.id.user_log_in_button_id;
      Button userLogInButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userLogInButtonId == null) {
        break missingId;
      }

      id = R.id.user_log_out_button_id;
      Button userLogOutButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userLogOutButtonId == null) {
        break missingId;
      }

      id = R.id.user_name_edit_button_id;
      Button userNameEditButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userNameEditButtonId == null) {
        break missingId;
      }

      id = R.id.user_name_id;
      TextView userNameId = ViewBindings.findChildViewById(rootView, id);
      if (userNameId == null) {
        break missingId;
      }

      id = R.id.user_name_value_id;
      TextView userNameValueId = ViewBindings.findChildViewById(rootView, id);
      if (userNameValueId == null) {
        break missingId;
      }

      id = R.id.user_post_count_id;
      Button userPostCountId = ViewBindings.findChildViewById(rootView, id);
      if (userPostCountId == null) {
        break missingId;
      }

      id = R.id.user_post_count_text_id;
      TextView userPostCountTextId = ViewBindings.findChildViewById(rootView, id);
      if (userPostCountTextId == null) {
        break missingId;
      }

      id = R.id.user_view_posts_button_id;
      Button userViewPostsButtonId = ViewBindings.findChildViewById(rootView, id);
      if (userViewPostsButtonId == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ScrollView) rootView, achievementBoard, avatarProfile,
          avatarProfileCardView, explorer, lastDivider, master, novice, userBirthdateEditButtonId,
          userBirthdateId, userBirthdateValueId, userEmailEditButtonId, userEmailId,
          userEmailValueId, userFollowerCountId, userFollowerCountTextId, userFollowingCountId,
          userFollowingCountTextId, userGenderEditButtonId, userGenderId, userGenderValueId,
          userIdId, userIdValueId, userLogInButtonId, userLogOutButtonId, userNameEditButtonId,
          userNameId, userNameValueId, userPostCountId, userPostCountTextId, userViewPostsButtonId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
